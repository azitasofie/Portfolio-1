//The Main class is gathering the data made by the abstract class and inherited classes of it.
public class Main {
    public static void main(String[] args) {
        Container containerVessel = new Container(50, "Container Vessel");
        Tanker tankerVessel = new Tanker(4, "Tanker Vessel");
        RoRo roRoVessel = new RoRo(8, "RoRo Vessel");

        containerVessel.loadingCargo(50, "TEU");
        containerVessel.loadingFraction();
        tankerVessel.loadingCargo("4");
        tankerVessel.loadingFraction();
        roRoVessel.loadingCargo("car");
        roRoVessel.loadingFraction();
    }
    //Abstract class "Vessels" start. Abstract because it's only function is to be inherited from.
    abstract static class Vessels {
        int cargo;
        String nameOfVessel;

        public Vessels(int cargo, String nameOfVessel) {
            this.nameOfVessel = nameOfVessel;
            this.cargo = cargo;
        }

        abstract float loadingFraction();
    }

    //Container class starts, inherited from abstract class "Vessels"

    static class Container extends Vessels {
        float numberOfContainers;
        float fraction;

        public Container(int cargo, String nameOfVessel) {
            super(cargo, nameOfVessel);
        }

        public void loadingCargo(int containers, String letters) {
            this.numberOfContainers = containers;

        }

        // calculate percentage filled (x/y)*100
        public float loadingFraction() {
            this.fraction = (this.numberOfContainers / cargo) * 100;
            return fraction;
        }
    }
    //Tanker class starts, inherited from abstract class "Vessels"
    static class Tanker extends Vessels {
        float fraction;
        float numberOfCompartments = 10;
        float filledCompartmentsDouble = 4;

        public Tanker(int cargo, String nameOfVessel) {
            super(cargo, nameOfVessel);
        }

        void loadingCargo(String filledCompartmentsString) {
            filledCompartmentsString = filledCompartmentsDouble + "";

        }

        public float loadingFraction() {
            this.fraction = (this.numberOfCompartments / cargo) * 100;
            return fraction;
        }
    }
    //RoRo class starts, inherited from abstract class "Vessels"
    static class RoRo extends Vessels {
        float laneMeters = 50;
        float fraction;
        String car = "car";

        public RoRo(int cargo, String nameOfVessel) {
            super(cargo, nameOfVessel);
        }

        public void loadingCargo(String typeVehicle) {
            this.car = typeVehicle;

        }

        public float loadingFraction() {
            this.fraction = (this.laneMeters / cargo) * 100;
            return fraction;
        }

    }
}


